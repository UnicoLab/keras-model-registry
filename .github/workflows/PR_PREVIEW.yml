name: Deploy PR Pages Preview

on:
  push:
    branches-ignore:
      - main
    paths:
      - "docs/**"
      - mkdocs.yml
  pull_request:
    branches:
      - main
    paths:
      - "docs/**"
      - mkdocs.yml
    types:
      - opened
      - reopened
      - edited
      - synchronize

concurrency: preview-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  deploy-pr-preview:
    runs-on: ["ubuntu-latest"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      
      - name: Cache Poetry dependencies
        id: cache-poetry
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/pypoetry
          key: venv-pr-preview-${{ runner.os }}-3.11-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-pr-preview-${{ runner.os }}-3.11-
      
      - name: Cache pip dependencies
        id: cache-pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-pr-preview-${{ runner.os }}-3.11-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            pip-pr-preview-${{ runner.os }}-3.11-
      
      - name: Install dependencies
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: poetry install --all-extras --no-interaction --no-root
      
      - name: Install project
        run: poetry install --all-extras --no-interaction

      - name: Install and Build
        shell: bash
        run: |
          poetry run mkdocs build
          echo "DOC GENERATED - OK!"

      - name: Deploy preview
        uses: rossjrw/pr-preview-action@v1
        with:
          source-dir: ./site/
          token: ${{ secrets.GITHUB_TOKEN }}
