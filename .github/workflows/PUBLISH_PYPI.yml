name: "Publish to PyPI - UnicoLab"

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      VERSION:
        required: true
        default: 0.1.0
        description: 'Version to publish (e.g., 0.1.0)'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  get-version:
    name: Get Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      release-tag: ${{ steps.version.outputs.release-tag }}
    steps:
      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # Extract version from tag (remove 'v' prefix if present)
            TAG="${{ github.ref_name }}"
            if [[ "$TAG" == v* ]]; then
              VERSION="${TAG#v}"
            else
              VERSION="$TAG"
            fi
            RELEASE_TAG="$TAG"
            echo "Using tag version: $VERSION (from tag: $RELEASE_TAG)"
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION="${{ inputs.VERSION }}"
            # For workflow_dispatch, use the input version as tag
            RELEASE_TAG="v$VERSION"
            echo "Using workflow_dispatch input version: $VERSION"
          else
            echo "ERROR: Unsupported event type: ${{ github.event_name }}"
            exit 1
          fi
          
          if [ -z "$VERSION" ]; then
            echo "ERROR: No version determined"
            exit 1
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "release-tag=$RELEASE_TAG" >> $GITHUB_OUTPUT

  publish:
    needs: get-version
    uses: UnicoLab/ul_cicd-workflows/.github/workflows/python-build.yml@main
    with:
      python-versions: '["3.11"]'
      dependencies-manager: 'poetry'
      build-command: 'poetry build'
      publish-to-pypi: true
      version: ${{ needs.get-version.outputs.version }}
      run-tests: true
      test-command: 'poetry run pytest tests/ -v'
      create-github-release: true
      release-tag: ${{ needs.get-version.outputs.release-tag }}
    secrets: inherit

  deploy-docs:
    needs: [get-version, publish]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --only doc --no-interaction

      - name: Configure Git
        run: |
          git config user.name "UnicoLab Bot"
          git config user.email "bot@unicolab.ai"

      - name: Deploy documentation
        continue-on-error: true
        run: |
          poetry run mike deploy --push --update-aliases ${{ needs.get-version.outputs.version }} latest
