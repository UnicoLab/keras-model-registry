name: Tests

on:
  push:
    branches:
      - dev
      - main
    paths:
      - "**.py"
      - "tests/**"
      - "kmr/**"
      - "pyproject.toml"
      - "poetry.lock"
  pull_request:
    branches:
      - dev
      - main
    paths:
      - "**.py"
      - "tests/**"
      - "kmr/**"
      - "pyproject.toml"
      - "poetry.lock"
  workflow_dispatch:
    inputs:
      PYTHON_VERSION:
        required: false
        default: "3.11"
        type: choice
        options:
          - "3.11"
          - "3.12"

concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  python-ci-cd:
    name: Python CI/CD Pipeline
    uses: UnicoLab/ul_cicd-workflows/.github/workflows/python-ci-cd.yml@main
    with:
      python-versions: '["3.11", "3.12"]'
      dependencies-manager: 'poetry'
      run-tests: true
      run-lint: true
      run-type-check: true
      run-docs-build: false
      create-release: false
      test-command: 'pytest tests/ -v --cov=kmr --cov-report=xml --cov-report=html --cov-report=term --ignore=tests/integration/ --ignore=tests/test_universal_input_handling.py'
      lint-command: 'ruff check kmr/ tests/ --select F,E,W,C4 --ignore ANN,D,UP,COM,SIM,PTH,S,B,N,ARG,ISC,E402,F401 && black --check kmr/ tests/'
      type-check-command: 'mypy kmr/ --ignore-missing-imports --no-strict-optional'
    secrets: inherit

  integration-tests:
    name: Integration Tests
    uses: UnicoLab/ul_cicd-workflows/.github/workflows/python-test.yml@main
    with:
      python-versions: '["3.11", "3.12"]'
      dependencies-manager: 'poetry'
      test-command: 'pytest tests/integration/ -v --cov=kmr --cov-append --cov-report=xml --cov-report=html --cov-report=term -m "not slow"'
    secrets: inherit

  coverage-upload:
    name: Upload Coverage
    needs: [python-ci-cd, integration-tests]
    runs-on: ubuntu-latest
    if: always() && !cancelled()
    
    steps:
      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true
        continue-on-error: true
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true
