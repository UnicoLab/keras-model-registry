line-length = 120
indent-width = 4
target-version = "py311"
# extend-unsafe-fixes = ["D"]  # Moved to lint section

[lint]
# List of rules: https://docs.astral.sh/ruff/rules
extend-unsafe-fixes = ["D"]
select = [
    # flake8-builtins
    "A",
    # flake8-commas
    "COM812",
    # flake8-comprehensions
    "C4",
    # pydocstyle
    "D",
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # flake8-implicit-str-concat
    "ISC",
    # pep8-naming
    "N",
    # flake8-annotations
    "ANN",
    # flake8-async
    "ASYNC",
    # flake8-bandid selected
    "S",
    # flake8-print
    "T20",
    # flake8-return
    "RET",
    # flake8-simplify
    "SIM",
    # flake8-unused-arguments
    "ARG",
    # flake8-use-pathlib
    "PTH",
    # eradicate
    "ERA",
    # pandas-vet
    "PD",
]
ignore = [
    "D100",
    "D101",
    "D104",
    "D106",
    # missing-type-self
    "ANN101",
    # missing-type-cls
    "ANN102",
    # missing-type-kwargs
    "ANN003",
    # utf-8 encoding skip
    "UP009",
    # First argument of a method should be named `self`
    "N805",
    # 1 blank line required between summary line and description
    "D205",
    # Missing return type annotation for special method `__init__`
    "ANN204",
    # Avoid using the generic variable name `df` for DataFrames
    "PD901",
    # Unnecessary assignment to `df` before `return` statement
    "RET504",
    # commented code
    "ERA001",
    # Star-arg unpacking after a keyword argument is strongly discouraged
    "B026",
    # Missing type annotation for function argument `self`
    "ANN001",
    # Dynamically typed expressions (typing.Any) are disallowed in `wrapper`
    "ANN401",
    # Unnecessary `elif` after `return` statement
    "RET505",
    # Within an `except` clause, raise exceptions with `raise
    "B904",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[format]
docstring-code-format = true
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[lint.pydocstyle]
convention = "google"

[lint.per-file-ignores]
"**/test*.py" = ["S101", "T201", "N999", "ANN201", "ANN202", "N806", "N803", "F841", "ARG002", "ARG005", "ARG001", "E402", "D212", "D417", "B007", "SIM114", "SIM117", "S603", "S607", "S110", "E722", "C408", "UP038", "UP007", "SIM108", "SIM118", "PTH110", "PTH108", "PTH107", "PTH123", "PTH118", "PTH120", "PTH100", "PTH103", "PD011", "PD003", "F401", "N807", "C416", "E501", "D200", "D202", "D410", "D411", "A001", "C4", "ISC", "RET", "ERA", "ASYNC", "UP", "SIM", "ARG", "PTH", "PD", "B", "S", "T20", "ANN", "N", "E", "F", "C", "A"]
"**/tests/**/*.py" = ["S101", "T201", "N999", "ANN201", "ANN202", "N806", "N803", "F841", "ARG002", "ARG005", "ARG001", "E402", "D212", "D417", "B007", "SIM114", "SIM117", "S603", "S607", "S110", "E722", "C408", "UP038", "UP007", "SIM108", "SIM118", "PTH110", "PTH108", "PTH107", "PTH123", "PTH118", "PTH120", "PTH100", "PTH103", "PD011", "PD003", "F401", "N807", "C416", "E501", "D200", "D202", "D410", "D411", "A001", "C4", "ISC", "RET", "ERA", "ASYNC", "UP", "SIM", "ARG", "PTH", "PD", "B", "S", "T20", "ANN", "N", "E", "F", "C", "A"]
"**/examples/**/*.py" = ["T201", "ANN201", "N806", "N803", "F841", "D212", "B007", "SIM114", "PTH110", "PTH108", "PTH107", "PTH123", "PD011", "PD003"]
"**/scripts/**/*.py" = ["ANN201", "PTH120", "PTH100", "PTH118", "PTH123", "PTH110", "PTH107", "PTH103", "S603", "S607", "S110", "E722"]
"**/experimental/**/*.py" = ["ALL"]
"**/kmr/layers/*.py" = ["N999", "ARG005"]
"**/kmr/models/*.py" = ["N999", "ANN002", "UP038", "UP007", "SIM118", "E501", "F841", "C416", "E722", "S110", "ARG002", "SIM108"]
"**/kmr/utils/*.py" = ["T201", "N806", "N803", "SIM118", "SIM108", "UP007", "N807", "C408", "UP038"]
"**/kmr/metrics/*.py" = ["SIM108"]